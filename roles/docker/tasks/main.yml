---
- name: add docker os group
  group:
    name: "{{docker_install_os_config.os_group}}"
    state: present
    system: yes

- name: add docker os user
  user:
    name: "{{docker_install_os_config.os_user}}"
    group: "{{docker_install_os_config.os_group}}"
    shell: /bin/bash
    state: present

- name: create directory
  file:
    path: "{{docker_install_os_config.docker_binaries}}"
    state: directory
    owner: "{{docker_install_os_config.os_user}}"
    group: "{{docker_install_os_config.os_group}}"
    mode: "0700"

- name: check directory
  stat:
    path: "{{docker_install_os_config.docker_binaries}}" 
  register: st

- name: assert that directory is created
  assert:
    that: st.stat.isdir

- name: copy docker binary file from ansible server
  copy:
    src: "{{bin_file_path_scp.docker}}"
    dest: "{{docker_install_os_config.docker_binaries}}"
    owner: "{{docker_install_os_config.os_user}}"
    group: "{{docker_install_os_config.os_group}}"

- name: unarchive docker bin from tgz
  unarchive:
    remote_src: yes
    src: "{{docker_install_os_config.docker_binaries}}/{{bin_file_path_scp.docker}}"
    dest: "/usr/bin"
    owner: "root"
    group: "root"
    extra_opts: [--strip-components=1]

- name: copy docker systemd unit file
  copy:
    src: "{{ item }}"
    dest: /etc/systemd/system/
    mode: "0644"
    owner: root
    group: root
  with_items:
    - docker.service
    - docker.socket

- name: just force systemd to reload configs
  systemd:
    daemon_reload: yes

- name: copy docker compose
  copy:
    src: docker-compose
    dest: /usr/local/bin
    mode: "0755"
